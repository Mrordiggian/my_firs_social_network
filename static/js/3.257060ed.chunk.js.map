{"version":3,"sources":["assets/images/user.png","HOC/WithAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPost/MyPost.module.css","components/Profile/Profile.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/Post/Post.js","components/Profile/MyPost/Mypost.js","Redux/ProfileSelector.js","components/Profile/MyPost/MypostContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","withAuthRedirect","Component","connect","state","isAuthData","auth","props","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Post","photo","fullName","message","likeCounts","className","m","post","header","src","photoUser","alt","name","body","bottom","icon","faHeart","size","maxLength100","maxLengthCreator","Mypost","React","memo","posts","addPost","useState","editMpde","setEditMode","PostsElements","reverse","map","p","key","id","likecounts","postForm","ReduxPostForm","onSubmit","dataForm","newPost","NewPost","onClick","reduxForm","form","handleSubmit","Field","autoFocus","validate","required","placeholder","component","Textarea","selectProfileInfo","ProfilePage","profileInfo","selectProfilePosts","selectProfileStatus","status","selectProfileIsOwner","isOwner","selectProfilePhotoSmall","photos","small","selectProfileFullName","MyPostContainer","ProfileStatus","editMode","setStatus","useEffect","onDoubleClick","onBlur","updateProfileStatus","onChange","e","currentTarget","ProfileInfo","updateProfileData","saveMainPhoto","info","ava","style","background","large","type","target","files","accept","dataInfo","status_item","faEdit","pointer","ProfileDataForm","initialValues","then","Contact","title","about_element","href","ProfileData","about","aboutMe","lookingForAJob","lookingForAJobDescription","keys","contacts","error","saveForm","faTimes","Input","checked","Profile","Preloader","compose","selectAuthId","getProfile","getProfileStatus","withRouter","match","params","userID"],"mappings":"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","file":"static/js/3.257060ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.36daa457.png\";","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const newComponent = (props) => {\r\n        if (!props.isAuthData) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {isAuthData: state.auth.isAuthData}\r\n    }\r\n\r\n    return connect(mapStateToProps) (newComponent)\r\n}\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wapper\":\"MyPost_wapper__KhOUe\",\"postForm\":\"MyPost_postForm__3QL-Q\",\"newPost\":\"MyPost_newPost__KsTMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wapper\":\"Profile_wapper__3hLyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1mla9\",\"header\":\"Post_header__35SvX\",\"body\":\"Post_body__3ikh7\",\"name\":\"Post_name__1kx6U\",\"bottom\":\"Post_bottom__20ozi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__3TQ08\",\"photo\":\"ProfileInfo_photo__vu84q\",\"about_element\":\"ProfileInfo_about_element__RwM7S\",\"ava\":\"ProfileInfo_ava__UQWQ7\",\"status\":\"ProfileInfo_status__2HdzN\",\"about\":\"ProfileInfo_about__gdq7h\",\"faEdit\":\"ProfileInfo_faEdit__2RgFI\",\"saveForm\":\"ProfileInfo_saveForm__1qfrN\",\"pointer\":\"ProfileInfo_pointer__2dFY6\",\"dataInfo\":\"ProfileInfo_dataInfo__3DeV2\",\"status_item\":\"ProfileInfo_status_item__FW2x2\"};","import React from 'react';\r\nimport m from './Post.module.css'\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport photoUser from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = ({photo, fullName, message, likeCounts}) => {\r\n    return (\r\n        <div className={m.post + ' block'}>\r\n            <div className={m.header}>\r\n                <img src={photo || photoUser} alt='Photo'/>\r\n                <div className={m.name}>{fullName}</div>\r\n\r\n            </div>\r\n            <div className={m.body}>\r\n                {message}\r\n            </div>\r\n            <div className={m.bottom}>\r\n                <span><FontAwesomeIcon icon={faHeart} size=\"lg\"/> {likeCounts}</span>\r\n            </div>\r\n        </div>)\r\n\r\n\r\n}\r\nexport default Post","import React, {useState} from 'react';\r\nimport m from './MyPost.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/Validators/Validators\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst Mypost = React.memo(({posts, photo, fullName, addPost}) => {\r\n    const [editMpde, setEditMode] = useState(false)\r\n    let PostsElements = [...posts].reverse().map(p =>\r\n        <Post key={p.id}\r\n              message={p.message}\r\n              likeCounts = {p.likecounts}\r\n              photo = {photo}\r\n              fullName = {fullName}\r\n        />)\r\n    let addNewPost = (dataForm) => {\r\n        addPost(dataForm.newPost)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return <div>\r\n        <div className={m.postForm + ' block'}>\r\n            {!editMpde && <NewPost setEditMode={setEditMode}/>}\r\n            {editMpde && <ReduxPostForm setEditMode={setEditMode} onSubmit={addNewPost}/>}\r\n        </div>\r\n        {PostsElements}\r\n    </div>\r\n})\r\nexport default Mypost\r\n\r\nconst NewPost = ({setEditMode}) => {\r\n    return <div onClick={()=>{setEditMode(true)}} className={m.newPost }>\r\n        <span >What`s new?</span>\r\n    </div>\r\n}\r\nconst PostForm = ({setEditMode, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit} >\r\n        <Field autoFocus={true} name={'newPost'} validate={[required, maxLength100]} placeholder='Enter your message...'  component={Textarea}/>\r\n        <div>\r\n            <button>Post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({form: 'addNewPost'})(PostForm)","\r\n\r\nexport const selectProfileInfo = (state) => {\r\n    return state.ProfilePage.profileInfo\r\n}\r\nexport const selectProfilePosts = (state) => {\r\n    return state.ProfilePage.posts\r\n}\r\nexport const selectProfileStatus = (state) => {\r\n    return state.ProfilePage.status\r\n}\r\nexport const selectProfileIsOwner = (state) => {\r\n    return state.ProfilePage.isOwner\r\n}\r\nexport const selectProfilePhotoSmall = (state) => {\r\n    return state.ProfilePage.profileInfo.photos.small\r\n}\r\nexport const selectProfileFullName = (state) => {\r\n    return state.ProfilePage.profileInfo.fullName\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport m from './MyPost.module.css'\r\nimport {addPost} from \"../../../Redux/reducerProfile\";\r\nimport Mypost from \"./Mypost\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectProfileFullName, selectProfilePhotoSmall, selectProfilePosts} from \"../../../Redux/ProfileSelector\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        posts: selectProfilePosts(state),\r\n        photo: selectProfilePhotoSmall(state),\r\n        fullName: selectProfileFullName(state),\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, {addPost})(Mypost)\r\n\r\nexport default MyPostContainer","import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    const activateEditMode =() => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode =() => {\r\n        setEditMode(false)\r\n        props.updateProfileStatus(status)\r\n    }\r\n    const changeStatus =(e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    return <div>\r\n        {!editMode &&<div>\r\n            <span  onDoubleClick={activateEditMode}>{props.status || 'Set status'}</span>\r\n        </div>}\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateEditMode} value={status}\r\n                   onChange={changeStatus}/>\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React, {useState} from 'react';\r\nimport m from './ProfileInfo.module.css'\r\nimport photoUser from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../common/FormsControl/FormsControl\";\r\nimport {faEdit, faHeart, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport style from \"../../Login/login.module.css\";\r\n\r\n\r\nlet ProfileInfo = ({profileInfo, isOwner, status, updateProfileStatus, updateProfileData, saveMainPhoto}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const changeProfileData = (dataForm) => {\r\n        updateProfileData(dataForm).then(\r\n            () => {setEditMode(false)})\r\n    }\r\n    const upfatePhoto = (e) => {\r\n        if(e.target.files.length) {\r\n            saveMainPhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div className={m.info}>\r\n        <div className={m.ava +' block'}>\r\n            <div className={m.photo}\r\n                 style={{background: `url(${profileInfo.photos.large || photoUser}) 50% 50% no-repeat /cover`}}/>\r\n            {isOwner &&<input type='file' onChange={upfatePhoto} accept=\".jpg, .jpeg, .png\">\r\n            </input>}\r\n        </div>\r\n        <div className={m.dataInfo + ' block'}>\r\n            <h3>{profileInfo.fullName}</h3>\r\n            <div className={m.status}>\r\n                {isOwner && <ProfileStatus status={status} updateProfileStatus={updateProfileStatus}/>}\r\n                {!isOwner && <div className={m.status_item}>{status}</div>}\r\n            </div>\r\n            {isOwner && !editMode &&\r\n            <div className={m.faEdit} onClick={() => {\r\n                setEditMode(true)\r\n            }}><FontAwesomeIcon className={m.pointer} icon={faEdit} size=\"lg\"/></div>}\r\n            {!editMode && <ProfileData profileInfo={profileInfo}/>}\r\n            {editMode &&  <ProfileDataForm\r\n                setEditMode={setEditMode}\r\n                initialValues={profileInfo}\r\n                onSubmit={changeProfileData}\r\n                profileInfo={profileInfo}/>}\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\nexport default ProfileInfo\r\n\r\nconst Contact = ({title, value}) => {\r\n    return <div className={m.about_element}>\r\n        <b>{title}: </b><a href={value} target=\"_blank\">{value} </a>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profileInfo}) => {\r\n    return <div className={m.about}>\r\n        <div className={m.about_element}><b>About me: </b><span>{profileInfo.aboutMe}</span></div>\r\n        <div className={m.about_element}><b>Looking for a job: </b><span>{profileInfo.lookingForAJob ? \"yes\" : \"no\"}</span></div>\r\n        {profileInfo.lookingForAJob &&\r\n        <div className={m.about_element}><b>Description a job: </b><span>{profileInfo.lookingForAJobDescription}</span></div>}\r\n        <div>\r\n            {Object.keys(profileInfo.contacts).map(key => {\r\n                return profileInfo.contacts[key] && <Contact key={key} title={key} value={profileInfo.contacts[key]}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileDataForm = reduxForm({form: 'profileData'})(({profileInfo, handleSubmit, setEditMode, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={m.saveForm}>\r\n            <button className={m.pointer}>Save</button>\r\n            <FontAwesomeIcon className={m.pointer} onClick={() => setEditMode(false)} icon={faTimes} size=\"lg\"/>\r\n        </div>\r\n        {error && <div className={style.error}>  {error} </div>}\r\n        <Field validate={[]} name='fullName' type=\"text\" placeholder={'Full name'} component={Input}/>\r\n        <div><b>About me: </b></div>\r\n        <Field validate={[]} name='aboutMe' type=\"text\" placeholder={'About me'} component={Textarea}/>\r\n        <div><b>Looking for a job: </b></div>\r\n        <label><Field name='lookingForAJob' type=\"radio\" value='true' component={'input'} checked/>Yes</label>\r\n        <label><Field name='lookingForAJob' type=\"radio\" value='false' component={'input'}/>No</label>\r\n        <div><b>Description a job: </b></div>\r\n        <Field validate={[]} name='lookingForAJobDescription' type=\"text\" placeholder={'Description a job'}\r\n               component={Textarea}/>\r\n\r\n        <div><b>Contacts: </b>\r\n            {Object.keys(profileInfo.contacts).map(key => {\r\n                return <div>{key}\r\n                    <Field validate={[]} name={'contacts.' + key} type=\"text\" placeholder={key} component={Input}/>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n})\r\n\r\n","import React from 'react';\r\nimport m from './Profile.module.css'\r\nimport MyPostContainer from \"./MyPost/MypostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\n\r\n\r\nlet Profile  = (props) => {\r\n    if(!props.profileInfo) return  <Preloader/>\r\n    return <div>\r\n        <ProfileInfo {...props}/>\r\n        <MyPostContainer/>\r\n    </div>\r\n}\r\nexport default Profile","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getProfileStatus, updateProfileData, updateProfileStatus, saveMainPhoto} from \"../../Redux/reducerProfile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {selectProfileInfo, selectProfileIsOwner, selectProfileStatus} from \"../../Redux/ProfileSelector\";\r\nimport {selectAuthId} from \"../../Redux/AuthSelector\";\r\n\r\n\r\n\r\nfunction ProfileContainer(props) {\r\n    useEffect(() => {\r\n            props.getProfile(props.match.params.userID || props.id)\r\n            props.getProfileStatus(props.match.params.userID || props.id)\r\n        },\r\n        [props.match.params.userID]\r\n    )\r\n    return <Profile {...props}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileInfo: selectProfileInfo(state),\r\n        id: selectAuthId(state),\r\n        status: selectProfileStatus(state),\r\n        isOwner: selectProfileIsOwner(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus, updateProfileData, saveMainPhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.userID) {\r\n            this.props.getProfile(this.props.match.params.userID)\r\n            this.props.getProfileStatus(this.props.match.params.userID)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.match.params.userID != this.props.match.params.userID){\r\n            this.props.getProfile(this.props.match.params.userID)\r\n            this.props.getProfileStatus(this.props.match.params.userID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileInfo: state.ProfilePage.profileInfo,\r\n        id: state.auth.id,\r\n        status: state.ProfilePage.status,\r\n        isOwner: state.ProfilePage.isOwner\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus, updateProfileData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n*/\r\n"],"sourceRoot":""}