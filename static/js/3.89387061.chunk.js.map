{"version":3,"sources":["assets/images/user.png","HOC/WithAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPost/MyPost.module.css","components/Profile/Profile.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/Post/Post.js","components/Profile/MyPost/Mypost.js","components/Profile/MyPost/MypostContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","withAuthRedirect","Component","connect","state","isAuthData","auth","props","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Post","className","m","post","header","src","profileInfo","photos","small","photoUser","name","fullName","body","message","bottom","icon","faHeart","size","likecounts","maxLength100","maxLengthCreator","Mypost","React","memo","useState","editMpde","setEditMode","PostsElements","posts","reverse","map","p","key","id","postForm","ReduxPostForm","onSubmit","dataForm","addPost","newPost","NewPost","onClick","reduxForm","form","handleSubmit","onBlur","Field","autoFocus","validate","required","placeholder","component","Textarea","MyPostContainer","ProfilePage","ProfileStatus","editMode","status","setStatus","useEffect","onDoubleClick","updateProfileStatus","onChange","e","currentTarget","ProfileInfo","isOwner","updateProfileData","saveMainPhoto","info","ava","photo","style","background","large","type","target","files","accept","faEdit","pointer","ProfileDataForm","initialValues","then","Contact","title","about_element","href","ProfileData","about","aboutMe","lookingForAJob","lookingForAJobDescription","keys","contacts","error","saveForm","faTimes","Input","checked","Profile","Preloader","compose","getProfile","getProfileStatus","withRouter","match","params","userID"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,kC,iCCA3C,sEAKaC,GALb,MAKgC,SAACC,GAS7B,OAAOC,aAJe,SAACC,GACnB,MAAO,CAACC,WAAYD,EAAME,KAAKD,cAG5BF,EARc,SAACI,GAClB,OAAKA,EAAMF,WACJ,kBAACH,EAAcK,GADQ,kBAAC,IAAD,CAAUC,GAAI,iB,iCCJrC,SAASC,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,oBICAlC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,yBAAyB,QAAU,0B,oBCAhGD,EAAOC,QAAU,CAAC,OAAS,0B,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,uB,oBCAvID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,cAAgB,mCAAmC,IAAM,yBAAyB,OAAS,4BAA4B,MAAQ,2BAA2B,OAAS,4BAA4B,SAAW,8BAA8B,QAAU,+B,4KCuBzTkC,EAlBF,SAAC3B,GACV,OACI,yBAAK4B,UAAWC,IAAEC,KAAO,UACrB,yBAAKF,UAAWC,IAAEE,QACd,yBAAKC,IAAKhC,EAAMiC,YAAYC,OAAOC,OAASC,MAC5C,yBAAKR,UAAWC,IAAEQ,MAAOrC,EAAMiC,YAAYK,WAG/C,yBAAKV,UAAWC,IAAEU,MACbvC,EAAMwC,SAEX,yBAAKZ,UAAWC,IAAEY,QACd,8BAAM,kBAAC,IAAD,CAAiBC,KAAMC,IAASC,KAAK,OAA3C,IAAmD5C,EAAM6C,e,kCCXrEC,EAAeC,YAAiB,KAuBrBC,EArBAC,IAAMC,MAAK,SAAClD,GAAW,IAAD,EACDmD,oBAAS,GADR,mBAC1BC,EAD0B,KAChBC,EADgB,KAE7BC,EAAgB,YAAItD,EAAMH,MAAM0D,OAAOC,UAAUC,KAAI,SAAAC,GAAC,OACtD,kBAAC,EAAD,CAAMC,IAAKD,EAAEE,GACPpB,QAASkB,EAAElB,QACXK,WAAYa,EAAEb,WACdZ,YAAajC,EAAMH,MAAMoC,iBAOnC,OAAO,6BACH,yBAAKL,UAAWC,IAAEgC,SAAW,WACvBT,GAAY,kBAAC,EAAD,CAASC,YAAaA,IACnCD,GAAY,kBAACU,EAAD,CAAeT,YAAaA,EAAaU,SARhD,SAACC,GACXhE,EAAMiE,QAAQD,EAASE,SACvBb,GAAY,OAQXC,MAKHa,EAAU,SAAC,GAAmB,IAAlBd,EAAiB,EAAjBA,YACd,OAAO,yBAAKe,QAAS,WAAKf,GAAY,IAAQzB,UAAWC,IAAEqC,SACvD,+CAYFJ,EAAgBO,YAAU,CAACC,KAAM,cAAjBD,EATL,SAAC,GAAiC,IAAhChB,EAA+B,EAA/BA,YAAakB,EAAkB,EAAlBA,aAC5B,OAAO,0BAAMR,SAAUQ,EAAcC,OAAQ,kBAAInB,GAAY,KACzD,kBAACoB,EAAA,EAAD,CAAOC,WAAW,EAAOrC,KAAM,UAAWsC,SAAU,CAACC,IAAU9B,GAAe+B,YAAY,wBAAyBC,UAAWC,MAC9H,6BACI,6CCzBGC,EAFSpF,aANF,SAACC,GACnB,MAAO,CACHA,MAAOA,EAAMoF,eAI4B,CAAChB,aAA1BrE,CAAoCoD,G,kBCoB7CkC,EA/BO,SAAClF,GAAW,IAAD,EACCmD,oBAAS,GADV,mBACxBgC,EADwB,KACd9B,EADc,OAEHF,mBAASnD,EAAMoF,QAFZ,mBAExBA,EAFwB,KAEhBC,EAFgB,KAgB7B,OAHAC,qBAAU,WACND,EAAUrF,EAAMoF,UAClB,CAACpF,EAAMoF,SACF,8BACDD,GAAW,6BACT,0BAAOI,cAfS,WACpBlC,GAAY,KAciCrD,EAAMoF,QAAU,eAE5DD,GACD,6BACI,2BAAOT,WAAW,EAAMF,OAhBN,WACtBnB,GAAY,GACZrD,EAAMwF,oBAAoBJ,IAc8B7D,MAAO6D,EACpDK,SAbK,SAACC,GACjBL,EAAUK,EAAEC,cAAcpE,a,kBCkCnBqE,EArCG,SAAC,GAA2F,IAA1F3D,EAAyF,EAAzFA,YAAa4D,EAA4E,EAA5EA,QAAST,EAAmE,EAAnEA,OAAQI,EAA2D,EAA3DA,oBAAqBM,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,cAAmB,EACzE5C,oBAAS,GADgE,mBAClGgC,EADkG,KACxF9B,EADwF,KAWzG,OAAO,yBAAKzB,UAAWC,IAAEmE,MACrB,yBAAKpE,UAAWC,IAAEoE,IAAK,UACnB,yBAAKrE,UAAWC,IAAEqE,MACbC,MAAO,CAACC,WAAW,OAAD,OAASnE,EAAYC,OAAOmE,OAASjE,IAArC,iCACtByD,GAAU,2BAAOS,KAAK,OAAOb,SATlB,SAACC,GACdA,EAAEa,OAAOC,MAAMhF,QACduE,EAAcL,EAAEa,OAAOC,MAAM,KAOwBC,OAAO,uBAGhE,yBAAK7E,UAAW,SACZ,4BAAKK,EAAYK,UACjB,yBAAKV,UAAWC,IAAEuD,QACbS,GAAW,kBAAC,EAAD,CAAeT,OAAQA,EAAQI,oBAAqBA,KAC9DK,GAAW,6BAAMT,IAEtBS,IAAYV,GACb,yBAAKvD,UAAWC,IAAE6E,OAAQtC,QAAS,WAC/Bf,GAAY,KACb,kBAAC,IAAD,CAAiBzB,UAAWC,IAAE8E,QAASjE,KAAMgE,IAAQ9D,KAAK,SAC3DuC,GAAY,kBAAC,EAAD,CAAalD,YAAaA,IACvCkD,GACD,kBAACyB,EAAD,CAAiBvD,YAAaA,EAAawD,cAAe5E,EAAa8B,SA5BrD,SAACC,GACvB8B,EAAkB9B,GAAU8C,MACxB,WAAOzD,GAAY,OA2BFpB,YAAaA,OAQpC8E,EAAU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOzF,EAAW,EAAXA,MACrB,OAAO,yBAAKK,UAAWC,IAAEoF,eACrB,2BAAID,EAAJ,MAAgB,uBAAGE,KAAM3F,EAAOgF,OAAO,UAAUhF,EAAjC,OAIlB4F,EAAc,SAAC,GAAmB,IAAlBlF,EAAiB,EAAjBA,YAClB,OAAO,yBAAKL,UAAWC,IAAEuF,OACrB,yBAAKxF,UAAWC,IAAEoF,eAAe,yCAAiB,8BAAOhF,EAAYoF,UACrE,yBAAKzF,UAAWC,IAAEoF,eAAe,kDAA0B,8BAAOhF,EAAYqF,eAAiB,MAAQ,OACtGrF,EAAYqF,gBACb,yBAAK1F,UAAWC,IAAEoF,eAAe,kDAA0B,8BAAOhF,EAAYsF,4BAC9E,6BACK9G,OAAO+G,KAAKvF,EAAYwF,UAAUhE,KAAI,SAAAE,GACnC,OAAO1B,EAAYwF,SAAS9D,IAAQ,kBAAC,EAAD,CAASA,IAAKA,EAAKqD,MAAOrD,EAAKpC,MAAOU,EAAYwF,SAAS9D,WAMzGiD,EAAkBvC,YAAU,CAACC,KAAM,eAAjBD,EAAiC,YAAsD,IAApDpC,EAAmD,EAAnDA,YAAasC,EAAsC,EAAtCA,aAAclB,EAAwB,EAAxBA,YAAaqE,EAAW,EAAXA,MAC/F,OAAO,0BAAM3D,SAAUQ,GACnB,yBAAK3C,UAAWC,IAAE8F,UACd,4BAAQ/F,UAAWC,IAAE8E,SAArB,QACA,kBAAC,IAAD,CAAiB/E,UAAWC,IAAE8E,QAASvC,QAAS,kBAAMf,GAAY,IAAQX,KAAMkF,IAAShF,KAAK,QAEjG8E,GAAS,yBAAK9F,UAAWuE,IAAMuB,OAAtB,KAAgCA,EAAhC,KACV,kBAACjD,EAAA,EAAD,CAAOE,SAAU,GAAItC,KAAK,WAAWiE,KAAK,OAAOzB,YAAa,YAAaC,UAAW+C,MACtF,6BAAK,0CACL,kBAACpD,EAAA,EAAD,CAAOE,SAAU,GAAItC,KAAK,UAAUiE,KAAK,OAAOzB,YAAa,WAAYC,UAAWC,MACpF,6BAAK,mDACL,+BAAO,kBAACN,EAAA,EAAD,CAAOpC,KAAK,iBAAiBiE,KAAK,QAAQ/E,MAAM,OAAOuD,UAAW,QAASgD,SAAO,IAAzF,OACA,+BAAO,kBAACrD,EAAA,EAAD,CAAOpC,KAAK,iBAAiBiE,KAAK,QAAQ/E,MAAM,QAAQuD,UAAW,UAA1E,MACA,6BAAK,mDACL,kBAACL,EAAA,EAAD,CAAOE,SAAU,GAAItC,KAAK,4BAA4BiE,KAAK,OAAOzB,YAAa,oBACxEC,UAAWC,MAElB,6BAAK,yCACAtE,OAAO+G,KAAKvF,EAAYwF,UAAUhE,KAAI,SAAAE,GACnC,OAAO,6BAAMA,EACT,kBAACc,EAAA,EAAD,CAAOE,SAAU,GAAItC,KAAM,YAAcsB,EAAK2C,KAAK,OAAOzB,YAAalB,EAAKmB,UAAW+C,e,QC1E5FE,EAPA,SAAC/H,GACZ,OAAIA,EAAMiC,YACH,6BACH,kBAAC,EAAgBjC,GACjB,kBAAC,EAAD,OAH2B,kBAACgI,EAAA,EAAD,O,wBCiBpBC,sBACXrI,aATkB,SAACC,GACnB,MAAO,CACHoC,YAAapC,EAAMoF,YAAYhD,YAC/B2B,GAAI/D,EAAME,KAAK6D,GACfwB,OAAQvF,EAAMoF,YAAYG,OAC1BS,QAAShG,EAAMoF,YAAYY,WAIN,CAACqC,eAAYC,qBAAkB3C,wBAAqBM,sBAAmBC,oBAChGqC,IACA1I,IAHWuI,EAlBf,SAA0BjI,GAOtB,OANAsF,qBAAU,WACFtF,EAAMkI,WAAWlI,EAAMqI,MAAMC,OAAOC,QACpCvI,EAAMmI,iBAAiBnI,EAAMqI,MAAMC,OAAOC,UAE9C,CAACvI,EAAMqI,MAAMC,OAAOC,SAEjB,kBAAC,EAAYvI","file":"static/js/3.89387061.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.36daa457.png\";","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const newComponent = (props) => {\r\n        if (!props.isAuthData) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {isAuthData: state.auth.isAuthData}\r\n    }\r\n\r\n    return connect(mapStateToProps) (newComponent)\r\n}\r\n\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wapper\":\"MyPost_wapper__KhOUe\",\"postForm\":\"MyPost_postForm__3QL-Q\",\"newPost\":\"MyPost_newPost__KsTMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wapper\":\"Profile_wapper__3hLyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1mla9\",\"header\":\"Post_header__35SvX\",\"body\":\"Post_body__3ikh7\",\"name\":\"Post_name__1kx6U\",\"bottom\":\"Post_bottom__20ozi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__3TQ08\",\"photo\":\"ProfileInfo_photo__vu84q\",\"about_element\":\"ProfileInfo_about_element__RwM7S\",\"ava\":\"ProfileInfo_ava__UQWQ7\",\"status\":\"ProfileInfo_status__2HdzN\",\"about\":\"ProfileInfo_about__gdq7h\",\"faEdit\":\"ProfileInfo_faEdit__2RgFI\",\"saveForm\":\"ProfileInfo_saveForm__1qfrN\",\"pointer\":\"ProfileInfo_pointer__2dFY6\"};","import React from 'react';\r\nimport m from './Post.module.css'\r\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport photoUser from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={m.post + ' block'}>\r\n            <div className={m.header}>\r\n                <img src={props.profileInfo.photos.small || photoUser}/>\r\n                <div className={m.name}>{props.profileInfo.fullName}</div>\r\n\r\n            </div>\r\n            <div className={m.body}>\r\n                {props.message}\r\n            </div>\r\n            <div className={m.bottom}>\r\n                <span><FontAwesomeIcon icon={faHeart} size=\"lg\"/> {props.likecounts}</span>\r\n            </div>\r\n        </div>)\r\n\r\n\r\n}\r\nexport default Post","import React, {useState} from 'react';\r\nimport m from './MyPost.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/Validators/Validators\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst Mypost = React.memo((props) => {\r\n    const [editMpde, setEditMode] = useState(false)\r\n    let PostsElements = [...props.state.posts].reverse().map(p =>\r\n        <Post key={p.id}\r\n              message={p.message}\r\n              likecounts={p.likecounts}\r\n              profileInfo={props.state.profileInfo}\r\n        />)\r\n    let addPost = (dataForm) => {\r\n        props.addPost(dataForm.newPost)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return <div>\r\n        <div className={m.postForm + ' block'}>\r\n            {!editMpde && <NewPost setEditMode={setEditMode}/>}\r\n            {editMpde && <ReduxPostForm setEditMode={setEditMode} onSubmit={addPost}/>}\r\n        </div>\r\n        {PostsElements}\r\n    </div>\r\n})\r\nexport default Mypost\r\n\r\nconst NewPost = ({setEditMode}) => {\r\n    return <div onClick={()=>{setEditMode(true)}} className={m.newPost }>\r\n        <span >What`s new?</span>\r\n    </div>\r\n}\r\nconst PostForm = ({setEditMode, handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit} onBlur={()=>setEditMode(false)}>\r\n        <Field autoFocus={true}  name={'newPost'} validate={[required, maxLength100]} placeholder='Enter your message...'  component={Textarea}/>\r\n        <div>\r\n            <button>Post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({form: 'addNewPost'})(PostForm)","import React from 'react';\r\nimport m from './MyPost.module.css'\r\nimport {addPost} from \"../../../Redux/reducerProfile\";\r\nimport Mypost from \"./Mypost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        state: state.ProfilePage\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, {addPost})(Mypost)\r\n\r\nexport default MyPostContainer","import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    const activateEditMode =() => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode =() => {\r\n        setEditMode(false)\r\n        props.updateProfileStatus(status)\r\n    }\r\n    const changeStatus =(e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    return <div>\r\n        {!editMode &&<div>\r\n            <span  onDoubleClick={activateEditMode}>{props.status || 'Set status'}</span>\r\n        </div>}\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateEditMode} value={status}\r\n                   onChange={changeStatus}/>\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React, {useState} from 'react';\r\nimport m from './ProfileInfo.module.css'\r\nimport photoUser from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../../common/FormsControl/FormsControl\";\r\nimport {faEdit, faHeart, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport style from \"../../Login/login.module.css\";\r\n\r\n\r\nlet ProfileInfo = ({profileInfo, isOwner, status, updateProfileStatus, updateProfileData, saveMainPhoto}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const changeProfileData = (dataForm) => {\r\n        updateProfileData(dataForm).then(\r\n            () => {setEditMode(false)})\r\n    }\r\n    const upfatePhoto = (e) => {\r\n        if(e.target.files.length) {\r\n            saveMainPhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div className={m.info}>\r\n        <div className={m.ava +' block'}>\r\n            <div className={m.photo}\r\n                 style={{background: `url(${profileInfo.photos.large || photoUser}) 50% 50% no-repeat /cover`}}/>\r\n            {isOwner &&<input type='file' onChange={upfatePhoto} accept=\".jpg, .jpeg, .png\">\r\n            </input>}\r\n        </div>\r\n        <div className={'block'}>\r\n            <h3>{profileInfo.fullName}</h3>\r\n            <div className={m.status}>\r\n                {isOwner && <ProfileStatus status={status} updateProfileStatus={updateProfileStatus}/>}\r\n                {!isOwner && <div>{status}</div>}\r\n            </div>\r\n            {isOwner && !editMode &&\r\n            <div className={m.faEdit} onClick={() => {\r\n                setEditMode(true)\r\n            }}><FontAwesomeIcon className={m.pointer} icon={faEdit} size=\"lg\"/></div>}\r\n            {!editMode && <ProfileData profileInfo={profileInfo}/>}\r\n            {editMode &&\r\n            <ProfileDataForm setEditMode={setEditMode} initialValues={profileInfo} onSubmit={changeProfileData}\r\n                             profileInfo={profileInfo}/>}\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\nexport default ProfileInfo\r\n\r\nconst Contact = ({title, value}) => {\r\n    return <div className={m.about_element}>\r\n        <b>{title}: </b><a href={value} target=\"_blank\">{value} </a>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profileInfo}) => {\r\n    return <div className={m.about}>\r\n        <div className={m.about_element}><b>About me: </b><span>{profileInfo.aboutMe}</span></div>\r\n        <div className={m.about_element}><b>Looking for a job: </b><span>{profileInfo.lookingForAJob ? \"yes\" : \"no\"}</span></div>\r\n        {profileInfo.lookingForAJob &&\r\n        <div className={m.about_element}><b>Description a job: </b><span>{profileInfo.lookingForAJobDescription}</span></div>}\r\n        <div>\r\n            {Object.keys(profileInfo.contacts).map(key => {\r\n                return profileInfo.contacts[key] && <Contact key={key} title={key} value={profileInfo.contacts[key]}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileDataForm = reduxForm({form: 'profileData'})(({profileInfo, handleSubmit, setEditMode, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={m.saveForm}>\r\n            <button className={m.pointer}>Save</button>\r\n            <FontAwesomeIcon className={m.pointer} onClick={() => setEditMode(false)} icon={faTimes} size=\"lg\"/>\r\n        </div>\r\n        {error && <div className={style.error}>  {error} </div>}\r\n        <Field validate={[]} name='fullName' type=\"text\" placeholder={'Full name'} component={Input}/>\r\n        <div><b>About me: </b></div>\r\n        <Field validate={[]} name='aboutMe' type=\"text\" placeholder={'About me'} component={Textarea}/>\r\n        <div><b>Looking for a job: </b></div>\r\n        <label><Field name='lookingForAJob' type=\"radio\" value='true' component={'input'} checked/>Yes</label>\r\n        <label><Field name='lookingForAJob' type=\"radio\" value='false' component={'input'}/>No</label>\r\n        <div><b>Description a job: </b></div>\r\n        <Field validate={[]} name='lookingForAJobDescription' type=\"text\" placeholder={'Description a job'}\r\n               component={Textarea}/>\r\n\r\n        <div><b>Contacts: </b>\r\n            {Object.keys(profileInfo.contacts).map(key => {\r\n                return <div>{key}\r\n                    <Field validate={[]} name={'contacts.' + key} type=\"text\" placeholder={key} component={Input}/>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n})\r\n\r\n","import React from 'react';\r\nimport m from './Profile.module.css'\r\nimport MyPostContainer from \"./MyPost/MypostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\n\r\n\r\nlet Profile  = (props) => {\r\n    if(!props.profileInfo) return  <Preloader/>\r\n    return <div>\r\n        <ProfileInfo {...props}/>\r\n        <MyPostContainer/>\r\n    </div>\r\n}\r\nexport default Profile","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getProfileStatus, updateProfileData, updateProfileStatus, saveMainPhoto} from \"../../Redux/reducerProfile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nfunction ProfileContainer(props) {\r\n    useEffect(() => {\r\n            props.getProfile(props.match.params.userID)\r\n            props.getProfileStatus(props.match.params.userID)\r\n        },\r\n        [props.match.params.userID]\r\n    )\r\n    return <Profile {...props}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileInfo: state.ProfilePage.profileInfo,\r\n        id: state.auth.id,\r\n        status: state.ProfilePage.status,\r\n        isOwner: state.ProfilePage.isOwner\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus, updateProfileData, saveMainPhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.userID) {\r\n            this.props.getProfile(this.props.match.params.userID)\r\n            this.props.getProfileStatus(this.props.match.params.userID)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.match.params.userID != this.props.match.params.userID){\r\n            this.props.getProfile(this.props.match.params.userID)\r\n            this.props.getProfileStatus(this.props.match.params.userID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileInfo: state.ProfilePage.profileInfo,\r\n        id: state.auth.id,\r\n        status: state.ProfilePage.status,\r\n        isOwner: state.ProfilePage.isOwner\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus, updateProfileData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n*/\r\n"],"sourceRoot":""}