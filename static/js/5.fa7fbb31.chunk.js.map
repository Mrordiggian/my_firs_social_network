{"version":3,"sources":["assets/images/user.png","HOC/WithAuthRedirect.js","components/Message/Message.module.css","components/Message/Message.js","components/Message/MessageContainer.js"],"names":["module","exports","withAuthRedirect","Component","connect","state","isAuthData","auth","props","to","Message","DialogsNames","dialogs","map","d","id","name","ava","DialogsMessages","messages","m","message","send","className","dialogsName","dialogsMessage","ReduxMessageForm","onSubmit","dataForm","sendMessage","newMessage","DialogMessage","right","DialogItem","item","photo","style","background","photoUser","activeClassName","active","maxLength100","maxLengthCreator","reduxForm","form","handleSubmit","Field","validate","required","placeholder","cols","rows","component","Textarea","MessageContainer","compose","MessagePage","newtextMessage"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,kC,iCCA3C,sEAKaC,GALb,MAKgC,SAACC,GAS7B,OAAOC,aAJe,SAACC,GACnB,MAAO,CAACC,WAAYD,EAAME,KAAKD,cAG5BF,EARc,SAACI,GAClB,OAAKA,EAAMF,WACJ,kBAACH,EAAcK,GADQ,kBAAC,IAAD,CAAUC,GAAI,iB,oBCNpDT,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,eAAiB,gCAAgC,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,OAAS,wBAAwB,MAAQ,yB,mJC6B1QS,EApBC,SAACF,GACb,IAAIG,EAAeH,EAAMH,MAAMO,QAAQC,KAAI,SAAAC,GAAC,OAAG,kBAAC,EAAD,CAAYC,GAAID,EAAEC,GAAIC,KAAMF,EAAEE,KAAMC,IAAKH,EAAEG,SACtFC,EAAkBV,EAAMH,MAAMc,SAASN,KAAI,SAAAO,GAAC,OAAI,kBAAC,EAAD,CAAeC,QAASD,EAAEC,QAASC,KAAMF,EAAEE,UAM/F,OACI,yBAAKC,UAAWH,IAAER,SACf,yBAAKW,UAAWH,IAAEI,aACbb,GAEJ,yBAAKY,UAAWH,IAAEK,gBACd,6BAAMP,GACN,kBAACQ,EAAD,CAAkBC,SAXf,SAACC,GACZpB,EAAMqB,YAAYD,EAASE,kBAkB7BC,EAAgB,SAACvB,GACnB,MAAiB,WAAdA,EAAMc,KAA0B,yBAAKC,UAAWH,IAAEC,SAAS,8BAAOb,EAAMa,UAC1D,QAAdb,EAAMc,KAAsB,yBAAKC,UAAS,UAAKH,IAAEC,QAAP,cAAoBD,IAAEY,QAAS,8BAAOxB,EAAMa,eAAzF,GAGEY,EAAa,SAACzB,GAChB,OACI,yBAAKe,UAAWH,IAAEc,MACd,yBAAKX,UAAWH,IAAEe,MAAOC,MAAO,CAACC,WAAW,OAAD,OAAS7B,EAAMS,KAAOqB,IAAtB,iCAC3C,kBAAC,IAAD,CAAS7B,GAAI,YAAcD,EAAMO,GAAIwB,gBAAiBnB,IAAEoB,QAAShC,EAAMQ,QAS/EyB,EAAeC,YAAiB,KAU9BhB,EAAmBiB,YAAU,CAACC,KAAM,WAAjBD,EATL,SAACnC,GACjB,OAAO,0BAAMmB,SAAUnB,EAAMqC,cACzB,kBAACC,EAAA,EAAD,CAAQC,SAAU,CAACC,IAAUP,GAAezB,KAAM,aAAciC,YAAY,wBAAwBC,KAAK,KAAKC,KAAK,IAAIC,UAAWC,MAClI,6BACI,qD,wBCzCNC,EAAmBC,YACrBnD,aARkB,SAACC,GACnB,MAAO,CACHA,MAAOA,EAAMmD,YACbC,eAAgBpD,EAAMmD,YAAYC,kBAKb,CAAC5B,kBAC1B3B,IAFqBqD,CAGvB7C,GAEa4C","file":"static/js/5.fa7fbb31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.36daa457.png\";","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const newComponent = (props) => {\r\n        if (!props.isAuthData) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {isAuthData: state.auth.isAuthData}\r\n    }\r\n\r\n    return connect(mapStateToProps) (newComponent)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__2OqUn\",\"dialogsName\":\"Message_dialogsName__pK0gd\",\"dialogsMessage\":\"Message_dialogsMessage__TsjrE\",\"message\":\"Message_message__1SKSP\",\"right\":\"Message_right__2LpkG\",\"item\":\"Message_item__2Va_Z\",\"active\":\"Message_active__2RNSp\",\"photo\":\"Message_photo__ZFwtE\"};","import React from 'react';\r\nimport m from './Message.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utilits/Validators/Validators\";\r\nimport photoUser from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    let DialogsNames = props.state.dialogs.map(d =><DialogItem id={d.id} name={d.name} ava={d.ava}/>)\r\n    let DialogsMessages = props.state.messages.map(m => <DialogMessage message={m.message} send={m.send}/>)\r\n\r\n    let onSubmit = (dataForm) => {\r\n        props.sendMessage(dataForm.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={m.dialogs}>\r\n           <div className={m.dialogsName}>\r\n               {DialogsNames}\r\n           </div>\r\n            <div className={m.dialogsMessage}>\r\n                <div>{DialogsMessages}</div>\r\n                <ReduxMessageForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Message\r\n\r\n\r\nconst DialogMessage = (props) => {\r\n    if(props.send == 'receive') return <div className={m.message}><span>{props.message}</span></div>\r\n    if(props.send == 'send')return <div className={`${m.message} + ${m.right}`}><span>{props.message}</span></div>\r\n}\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={m.item}>\r\n            <div className={m.photo} style={{background: `url(${props.ava || photoUser}) 50% 50% no-repeat /cover`}}/>\r\n            <NavLink to={'/message/' + props.id} activeClassName={m.active}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\nconst MessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field  validate={[required, maxLength100]} name={'newMessage'} placeholder='Enter your message...' cols=\"30\" rows=\"3\" component={Textarea} />\r\n        <div>\r\n            <button>Send message</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({form: 'message'})(MessageForm)","import React from 'react';\r\nimport m from './Message.module.css'\r\nimport {sendMessage} from \"../../Redux/reducerMessage\";\r\nimport Message from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        state: state.MessagePage,\r\n        newtextMessage: state.MessagePage.newtextMessage\r\n    }\r\n}\r\n\r\nconst MessageContainer = compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Message)\r\n\r\nexport default MessageContainer"],"sourceRoot":""}