{"version":3,"sources":["components/Login/login.module.css","api/api.js","Redux/reducerMessage.js","utilits/object_helpers.js","Redux/reducerUsers.js","assets/images/preloader.svg","components/Music/Music.js","components/News/News.js","components/Setting/Setting.js","components/NavBar/Navitem/Navitem.js","components/NavBar/Sidebar/Sidebar.js","components/NavBar/NavBar.js","components/NavBar/NavBarContainer.js","components/Header/Header.js","Redux/authReducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","Redux/appReducer.js","HOC/withSuspense.js","App.js","serviceWorker.js","Redux/reducerSidebar.js","Redux/redux-store.js","index.js","common/FormsControl/FormsControl.js","utilits/Validators/Validators.js","Redux/commonReducer.js","components/Header/Header.module.css","common/Preloader/Preloader.js","Redux/AuthSelector.js","components/NavBar/Navitem/Navitem.module.css","components/NavBar/Sidebar/Sidebar.module.css","common/FormsControl/FormsControl.module.css","components/NavBar/NavBar.module.css","Redux/reducerProfile.js"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","UserAPI","getUsers","page","countOnPage","get","then","response","data","followOnUser","userId","post","unfollowOnUser","delete","ProfileAPI","getStatus","userID","updateStatus","status","put","getProfileData","updateProfileData","getPosts","saveMainPhoto","photoFile","formData","FormData","append","AuthAPI","authUser","authLogin","email","password","rememberMe","captcha","Logout","SecurityAPI","getCaptcha","initialState","messages","id","message","send","dialogs","name","ava","sendMessage","type","reducerMessage","state","action","newMessage","Date","now","newtextMessage","updateObject","users","propsObject","actionProps","newProps","map","u","FOLLOW","currentPage","totalCountPage","isFetching","followSuccess","unfollowSuccess","cleanUsers","setCurrentPage","toggleIsFetching","requestUsers","dispatch","a","items","count","totalCount","followUnFollowFlow","APIMethod","actionCreator","toggleInProgress","resultCode","follow","unfollow","reducerUser","followed","Music","News","Setting","Navitem","path","content","icon","className","m","item","to","activeClassName","active","awesome","size","Sidebar","props","sidebar","sidebar__header","s","key","sidebar__item","src","alt","NavBar","nav","faUserCircle","faSearch","faComment","faBookmark","faMusic","faCog","NavBarContainer","connect","selectAuthId","Header","header","log","isAuthData","login","logOut","onClick","faSignOutAlt","captchaUrl","setAuthData","getAuthData","url","authReducer","HeaderContainer","this","React","Component","selectAuthState","maxLength30","maxLengthCreator","ReduxLoginForm","reduxForm","form","handleSubmit","error","onSubmit","Field","validate","required","placeholder","component","Input","style","isAuth","auth","sendLoginData","dataForm","stopSubmit","_error","initialized","appReducer","withSuspense","Suspense","fallback","Preloader","ProfileContainer","lazy","MessageContainer","FindsFriendsContainer","App","catchALLUnhandledErrors","reason","promise","alert","initializeApp","window","addEventListener","removeEventListener","exact","render","Login","withRouter","app","Promise","all","Boolean","location","hostname","match","reducerSidebar","reducers","combineReducers","ProfilePage","reducerProfile","MessagePage","FindFriends","common","commonReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ThunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","meta","touched","children","Textarea","input","newprops","errorBlock","maxlength","value","length","inProgress","isProgress","filter","Number","textAlign","preloader","ADD_POST","SET_POST","posts","newPost","profileInfo","isOwner","addPost","cleanPostState","cleanNewPost","setUserProfile","setStatus","deletePost","setOwner","saveMainPhotoSuccess","photo","getProfile","getState","getProfileStatus","updateProfileStatus","reject","photos","body","likecounts","p"],"mappings":"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","file":"static/js/main.d7fcf096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"login_error__3gTDQ\",\"inputFile\":\"login_inputFile__AiLtM\",\"labelFile\":\"login_labelFile__22Yj_\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '42ada78a-68af-4959-975c-6cdcc2441ad1'\r\n    }\r\n})\r\n\r\nexport const UserAPI = {\r\n    getUsers (page, countOnPage) {\r\n        return instance.get(`users?page= ${page}&count=${countOnPage}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    followOnUser (userId) {\r\n        return instance.post(`follow/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollowOnUser (userId) {\r\n\r\n        return instance.delete(`follow/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\nexport const ProfileAPI = {\r\n    getStatus (userID) {\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status`, {\r\n            status\r\n        })\r\n    },\r\n\r\n    getProfileData (userId) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateProfileData (data) {\r\n        return instance.put(`profile`, data)\r\n    }\r\n    ,getPosts (page) {\r\n        return axios.get(`https://jsonplaceholder.typicode.com/posts?_page=${page}`)\r\n    },\r\n    saveMainPhoto (photoFile) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type' : 'multipatr/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const AuthAPI = {\r\n\r\n    authUser () {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    authLogin (email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, {\r\n            email, password, rememberMe, captcha\r\n        })\r\n    },\r\n    Logout () {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\nexport const SecurityAPI = {\r\n    getCaptcha () {\r\n        return instance.get(`security/get-captcha-url`)\r\n\r\n    }\r\n}\r\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nlet initialState = {\r\n    messages: [\r\n        {id: 0, message: 'Hello', send: 'receive'},\r\n    ],\r\n    dialogs: [\r\n        {id: 0, name: 'Kate', ava: 'https://img.rg.ru/img/content/164/59/36/1_d_850.jpeg'},\r\n        {id: 1, name: 'Sasha', ava: 'http://cdn.ok-magazine.ru/files/presets/795_547/media_wysiwyg/16.3.2018_ok_cover40924__vid218897e.jpg'},\r\n        {id: 2, name: 'Mila', ava: 'https://www.ivi.ru/titr/uploads/2018/08/14/9988d81a98e2d9826e2340a7af4a7f48.jpg/1400x0'},\r\n        {id: 3, name: 'Megan', ava: 'https://pix-feed.com/wp-content/uploads/2018/04/maxresdefault-4.jpg'},\r\n        {id: 4, name: 'Lesli', ava: 'https://cs.pikabu.ru/post_img/2013/04/21/10/1366556575_1547025030.jpg'},\r\n    ]\r\n}\r\n\r\nconst reducerMessage = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: Date.now(),\r\n                message: action.message,\r\n                send: 'send'}\r\n\r\n            return  {\r\n                ...state,\r\n                messages : [...state.messages, newMessage],\r\n                newtextMessage : ''\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const sendMessage = (message) => ({type: SEND_MESSAGE, message})\r\n\r\nexport default reducerMessage","\r\nexport const updateObject = (users, propsObject, actionProps, newProps) => {\r\n   return users.map(u =>\r\n    u[propsObject] === actionProps ? {...u, ...newProps} : u)\r\n}\r\n","import {UserAPI} from \"../api/api\";\r\nimport {toggleInProgress} from \"./commonReducer\";\r\nimport {updateObject} from \"../utilits/object_helpers\";\r\n\r\nconst FOLLOW = 'users_FOLLOW';\r\nconst UNFOLLOW = 'users_UNFOLLOW';\r\nconst SET_USER = 'users_SET_USER';\r\nconst CLEAN_USER = 'users_CLEAN_USER';\r\nconst SET_CURRENT_PAGE = 'users_SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'users_SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users_TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    currentPage: 1,\r\n    totalCountPage: 0,\r\n    countOnPage: 10,\r\n    isFetching: false\r\n}\r\nconst reducerUser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObject(state.users, 'id', action.userID, {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObject(state.users, 'id', action.userID, {followed: false})\r\n            }\r\n        case SET_USER:\r\n            return {...state, users: [...state.users, ...action.users]}\r\n        case CLEAN_USER:\r\n            return {...state, users: [], currentPage: 1}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page}\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalCountPage: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID})\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users) => ({type: SET_USER, users})\r\nexport const cleanUsers = () => ({type: CLEAN_USER})\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page})\r\nexport const setTotalCount = (count) => ({type: SET_TOTAL_COUNT, count})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const requestUsers = (page, countOnPage) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let data = await UserAPI.getUsers(page, countOnPage)\r\n    dispatch(setUsers(data.items))\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setTotalCount(data.totalCount))\r\n}\r\nconst followUnFollowFlow = async (userId, APIMethod, actionCreator, dispatch) => {\r\n    dispatch(toggleInProgress(userId, true))\r\n    let data = await APIMethod(userId)\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId))\r\n    dispatch(toggleInProgress(userId, false))\r\n\r\n\r\n}\r\nexport const follow = (userId) => (dispatch) => {\r\n    followUnFollowFlow(userId, UserAPI.followOnUser, followSuccess, dispatch)\r\n}\r\nexport const unfollow = (userId) => (dispatch) => {\r\n    followUnFollowFlow(userId, UserAPI.unfollowOnUser, unfollowSuccess, dispatch)\r\n}\r\n\r\n\r\nexport default reducerUser","module.exports = __webpack_public_path__ + \"static/media/preloader.fc9cb5ff.svg\";","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return <div>\r\n        Music\r\n    </div>\r\n}\r\n\r\nexport default  Music","import React from 'react';\r\n\r\nconst News = () => {\r\n    return <div>\r\n        News\r\n    </div>\r\n}\r\n\r\nexport default  News","import React from 'react';\r\n\r\nconst Setting = () => {\r\n    return <div>\r\n        Setting\r\n    </div>\r\n}\r\n\r\nexport default  Setting","import React from 'react';\r\nimport m from './Navitem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Navitem = ({path, content, icon}) =>{\r\n    return(\r\n            <NavLink className={m.item} to={path} activeClassName={m.active}>\r\n                <div>\r\n                <span className={m.awesome}><FontAwesomeIcon  icon={icon} size=\"lg\"/></span>\r\n                {content}\r\n                </div>\r\n            </NavLink>\r\n\r\n    )\r\n}\r\n\r\nexport default Navitem","import React from 'react';\r\nimport m from './Sidebar.module.css'\r\n\r\nconst Sidebar = (props) => {\r\n    return <div className={m.sidebar}>\r\n        <div className={m.sidebar__header}>You know these people?</div>\r\n        {props.state.map(s =>\r\n        <div key={s.id} className={m.sidebar__item}>\r\n            <img src={s.ava} alt=\"\"/>\r\n            <span>{s.name}</span>\r\n        </div>)}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Sidebar","import React from 'react';\r\nimport m from './NavBar.module.css'\r\nimport Navitem from \"./Navitem/Navitem\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\nimport {faBookmark, faCog, faComment, faMusic, faSearch, faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NavBar = (props) => {\r\n\r\n\r\n    return <nav className={m.nav}>\r\n        <Navitem path={`/profile/${props.id}`} content='Profile' icon={faUserCircle}/>\r\n        <Navitem path='/findfriends' content='Find Friends' icon={faSearch}/>\r\n        <Navitem path='/message' content='Message' icon={faComment}/>\r\n        <Navitem path='/news' content='News' icon={faBookmark}/>\r\n        <Navitem path='/music' content='Music' icon={faMusic}/>\r\n        <Navitem path='/setting' content='Setting' icon={faCog}/>\r\n        <div className={m.sidebar}>\r\n            <Sidebar state = {props.state}/>\r\n\r\n        </div>\r\n\r\n    </nav>\r\n}\r\nexport default NavBar","import NavBar from \"./NavBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectAuthId} from \"../../Redux/AuthSelector\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        state: state.Sidebar,\r\n        id: selectAuthId(state)\r\n    }\r\n}\r\nconst NavBarContainer = connect(mapStateToProps)(NavBar)\r\n\r\nexport default NavBarContainer","import React from 'react';\r\nimport m from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Header = ({Logout, state}) => {\r\n    return (\r\n        <header className={m.header}>\r\n            <img src='https://static-s.aa-cdn.net/img/ios/1447600759/a3eb54155fccad3e3b91d8a0da36513e?v=1' alt=''/>\r\n            <div className={m.log}>\r\n                {state.isAuthData\r\n                    ? <div>{state.login}\r\n                    <span className={m.logOut} onClick={Logout} >\r\n                        <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\"/>\r\n                    </span>\r\n                </div>\r\n                    : <NavLink className={m.logOut} to={'/login'}>Login</NavLink>\r\n                        \r\n                 }\r\n\r\n\r\n            </div>\r\n        </header>)\r\n}\r\nexport default Header","import {AuthAPI, SecurityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_DATA = 'auth_SET_AUTH_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth_SGET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuthData: false,\r\n    captchaUrl: null\r\n\r\n}\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {...state, ...action.data}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nconst setAuthData = (id, login, email, isAuthData) => ({\r\n    type: SET_AUTH_DATA,\r\n    data: {id, login, email, isAuthData}\r\n})\r\nconst getCaptchaSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    data: {captchaUrl}\r\n})\r\n\r\n\r\nexport const getAuthData = () => async (dispatch) => {\r\n    let data = await AuthAPI.authUser()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(setAuthData(id, login, email, true))\r\n    }\r\n\r\n}\r\nexport const sendLoginData = (dataForm) => async (dispatch) => {\r\n    let {email, password, rememberMe, captcha} = {...dataForm}\r\n    let response = await AuthAPI.authLogin(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthData())\r\n    } else {\r\n        if(response.data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n        dispatch(stopSubmit('login', {_error: response.data.messages[0]}))\r\n    }\r\n\r\n}\r\nexport const Logout = () => async (dispatch) => {\r\n    let response = await AuthAPI.Logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthData(null, null, null, false))\r\n    }\r\n\r\n}\r\nconst getCaptcha = () => async (dispatch) => {\r\n    let response = await SecurityAPI.getCaptcha()\r\n    dispatch(getCaptchaSuccess(response.data.url))\r\n\r\n}\r\n\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthData, Logout} from \"../../Redux/authReducer\";\r\nimport {selectAuthState} from \"../../Redux/AuthSelector\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuthData()\r\n    }\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state: selectAuthState(state)}\r\n}\r\nexport default connect(mapStateToProps, {getAuthData, Logout})(HeaderContainer)","import React from 'react'\r\nimport style from './login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendLoginData} from \"../../Redux/authReducer\";\r\nimport {Input} from \"../../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utilits/Validators/Validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet maxLength30 = maxLengthCreator(30)\r\n\r\nconst LoginForm = ({captchaUrl, handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>email</div>\r\n        <Field validate={[required, maxLength30]} name='email' type=\"text\" placeholder={'email'} component={Input}/>\r\n        <div>Password</div>\r\n        <Field validate={[required, maxLength30]} name='password' type=\"password\" placeholder={'password'}\r\n               component={Input}/>\r\n        <Field name='rememberMe' type=\"checkbox\" component={Input}/>remember me\r\n        <div>\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n            {captchaUrl && <Field validate={[required, maxLength30]} name='captcha' type=\"text\" placeholder={'Enter symbols from the picture'} component={Input}/>}\r\n        </div>\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n        {error && <div className={style.error}>  {error} </div>}\r\n    </form>\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst LoginContainer = (props) => {\r\n    const onSubmit = (dataForm) => {\r\n        props.sendLoginData(dataForm)\r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={`/profile/${props.id}`}/>\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n    </div>\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuthData,\r\n    id: state.auth.id,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps, {sendLoginData})(LoginContainer)","import {getAuthData} from \"./authReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'app_INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {...state, initialized : true}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialized_success = () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeApp = () => async (dispatch) =>{\r\n    let promise = dispatch(getAuthData())\r\n    await Promise.all([promise])\r\n    dispatch(initialized_success())\r\n\r\n}\r\n\r\n\r\n\r\nexport default appReducer","import React from 'react'\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Setting from \"./components/Setting/Setting\";\nimport NavBarContainer from \"./components/NavBar/NavBarContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from './Redux/appReducer'\nimport Preloader from \"./common/Preloader/Preloader\";\nimport {withSuspense} from \"./HOC/withSuspense\";\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst MessageContainer = React.lazy(() => import('./components/Message/MessageContainer'))\nconst FindsFriendsContainer = React.lazy(() => import(\"./components/Find Friends/FindFriendsContainer\"))\n\nclass App extends Component {\n    catchALLUnhandledErrors = (reason, promise) => {\n    alert('Some error occurred')\n}\n    componentDidMount() {\n        this.props.initializeApp()\n        window.addEventListener(\"unhandledrejection\", this.catchALLUnhandledErrors)\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchALLUnhandledErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>\n        return (\n            <div className=\"App-wrapper\">\n                <HeaderContainer/>\n                <NavBarContainer/>\n                <div className={'App-wrapper-content'}>\n                    <Switch>\n                    <Route exact path='/' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/profile/:userID?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/message' render={withSuspense(MessageContainer)}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/findfriends' render={withSuspense(FindsFriendsContainer)}/>\n                    <Route path='/setting' render={() => <Setting/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                    <Route path='*' render={() => <div><h1>404 NOT FOUND</h1></div>}/>\n                    </Switch>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nexport default withRouter(connect(mapStateToProps, {initializeApp})(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nlet initialState =[\r\n    {id: 0, name: 'Dima', ava: 'https://sun9-10.userapi.com/c638320/v638320921/504bc/A-GirlzJ1VA.jpg'},\r\n    {id: 1, name: 'Pasha', ava: 'https://sun9-62.userapi.com/c858228/v858228674/410c9/e7MrDHCf8Ig.jpg?ava=1'},\r\n    {id: 2, name: 'Roma', ava: 'https://sun9-21.userapi.com/c855328/v855328105/d08c/SD6Kt0_ewQ4.jpg?ava=1'},\r\n    {id: 3, name: 'Sasha', ava: 'https://sun9-62.userapi.com/c850020/v850020647/2a8d2/WZv-RMVWys0.jpg?ava=1'},\r\n    {id: 4, name: 'Lesha', ava: 'https://vk.com/images/camera_200.png?ava=1'},\r\n]\r\nconst reducerSidebar = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default reducerSidebar","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport reducerProfile from \"./reducerProfile\";\r\nimport reducerMessage from \"./reducerMessage\";\r\nimport reducerSidebar from \"./reducerSidebar\";\r\nimport reducerUser from \"./reducerUsers\";\r\nimport authReducer from \"./authReducer\";\r\nimport commonReducer from \"./commonReducer\";\r\nimport ThunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: reducerProfile,\r\n    MessagePage: reducerMessage,\r\n    Sidebar: reducerSidebar,\r\n    FindFriends: reducerUser,\r\n    auth: authReducer,\r\n    common: commonReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleware)\r\n));\r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./Redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n    ReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>,\n        document.getElementById('root'));\n\n    window.store = store\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport style from './FormsControl.module.css'\r\n\r\n\r\nconst FormControl = ({meta, ...props}) => {\r\n    let error = meta.touched && meta.error\r\n    return <div>\r\n        {props.children}\r\n        <div className={style.error}>\r\n            {error && <span>{meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    let error = meta.touched && meta.error\r\n    let newprops = {input, meta, ...props}\r\n    return <FormControl {...newprops}>\r\n        <textarea  {...input} {...props} className={error? style.errorBlock : ' '} />\r\n    </FormControl>\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    let error = meta.touched && meta.error\r\n    let newprops = {input, meta, ...props}\r\n    return <FormControl {...newprops}>\r\n        <input {...input} {...props} className={error ? style.errorBlock: ' '} />\r\n    </FormControl>\r\n}\r\n","\r\nexport const maxLengthCreator = maxlength  => (value) => {\r\n     if(value && value.length > maxlength) return `Max length message ${maxlength} symbols`\r\n    return undefined\r\n}\r\n\r\nexport const required =  (value) => {\r\n    if(!value) return `This field dont empty`\r\n    return undefined\r\n}","const TOGGLE_IS_PROGRESS = 'TOGGLE_IS_PROGRESS';\r\n\r\nlet initialState = {\r\n    inProgress: []\r\n}\r\nconst commonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_PROGRESS: {\r\n            return {...state,\r\n                inProgress: action.isProgress\r\n                    ? [...state.inProgress, action.userId]\r\n                    : state.inProgress.filter(userId => Number(userId) !== action.userId)\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const toggleInProgress = (userId, isProgress) => ({type: TOGGLE_IS_PROGRESS, userId, isProgress})\r\n\r\n\r\nexport default commonReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1zKbY\",\"log\":\"Header_log__193tM\",\"logOut\":\"Header_logOut__1HMUr\"};","import React from 'react'\r\nimport preloader from \"../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = () => {\r\n    return <div style={{textAlign: 'center'}}>\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n}\r\nexport default Preloader","\r\n\r\nexport const selectAuthId = (state) => {\r\n    return state.auth.id\r\n}\r\nexport const selectAuthState = (state) => {\r\n    return state.auth\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navitem_item__37iES\",\"active\":\"Navitem_active__3lxWZ\",\"awesome\":\"Navitem_awesome__4rK8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__item\":\"Sidebar_sidebar__item__1SVVe\",\"sidebar__header\":\"Sidebar_sidebar__header__2PvPA\",\"sidebar\":\"Sidebar_sidebar__27Upr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__15umf\",\"errorBlock\":\"FormsControl_errorBlock__2NN0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1uwe6\",\"sidebar\":\"NavBar_sidebar__3aJHP\"};","import {ProfileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile_ADD_POST';\r\nconst SET_POST = 'profile_SET_POST';\r\nconst CLEAN_POST = 'profile_CLEAN_POST';\r\nconst DELETE_NEW_POST = 'profile_DELETE_NEW_POST';\r\nconst SET_USER_PROFILE = 'profile_SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile_SET_STATUS';\r\nconst DELETE_POST = 'profile_DELETE_POST';\r\nconst SET_OWNER = 'profile_SET_OWNER';\r\nconst SET_PHOTO = 'profile_SET_PHOTO';\r\n\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    newPost: null,\r\n    profileInfo: null,\r\n    status: null,\r\n    isOwner: false,\r\n}\r\nconst reducerProfile = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: Date.now(),\r\n                body: action.message,\r\n                likecounts: null\r\n            }\r\n            return {\r\n                ...state,\r\n                newPost: newPost,\r\n            }\r\n        }\r\n        case DELETE_NEW_POST: {\r\n            return {\r\n                ...state,\r\n                newPost: null,\r\n            }\r\n        }\r\n        case SET_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [ ...action.posts],\r\n            }\r\n        }\r\n        case CLEAN_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [],\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.id)}\r\n        }\r\n        case SET_OWNER: {\r\n            return {...state, isOwner: action.isOwner}\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profileInfo: action.profileInfo}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, profileInfo : { ...state.profileInfo, photos: action.photo}}\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addPost = (message) => ({type: ADD_POST, message})\r\nexport const setPosts = (posts) => ({type: SET_POST, posts})\r\nexport const cleanPostState = () => ({type: CLEAN_POST})\r\nexport const cleanNewPost = () => ({type: DELETE_NEW_POST})\r\nexport const setUserProfile = (profileInfo) => ({type: SET_USER_PROFILE, profileInfo})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (id) => ({type: DELETE_POST, id})\r\nexport const setOwner = (isOwner) => ({type: SET_OWNER, isOwner})\r\nexport const saveMainPhotoSuccess = (photo) => ({type: SET_PHOTO, photo})\r\n\r\nexport const getProfile = (userID) => async (dispatch, getState) => {\r\n    let state = getState()\r\n    dispatch(setUserProfile(null))\r\n    Number(userID) === state.auth.id ? dispatch(setOwner(true)): dispatch(setOwner(false))\r\n    let data = await ProfileAPI.getProfileData(userID)\r\n    dispatch(setUserProfile(data))\r\n\r\n}\r\nexport const getProfileStatus = (userID) => async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userID)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n    let response = await ProfileAPI.updateStatus(status)\r\n    response.data.resultCode === 0 && dispatch(setStatus(status))\r\n}\r\nexport const updateProfileData = (data) => async (dispatch, getState) => {\r\n    const state = getState()\r\n    let response = await ProfileAPI.updateProfileData(data)\r\n    if(response.data.resultCode === 0) dispatch(getProfile(state.auth.id))\r\n    else {dispatch(stopSubmit('profileData', {_error: response.data.messages[0]}))\r\n        return Promise.reject()\r\n    }\r\n}\r\nexport const saveMainPhoto = (photo) => async (dispatch) => {\r\n    let response = await ProfileAPI.saveMainPhoto(photo)\r\n    if(response.data.resultCode === 0) dispatch(saveMainPhotoSuccess(response.data.data.photos))\r\n}\r\nexport const getPosts = (page) => async (dispatch ) => {\r\n        let response = await ProfileAPI.getPosts(page)\r\n        dispatch(setPosts(response.data))\r\n}\r\n\r\n\r\nexport default reducerProfile"],"sourceRoot":""}