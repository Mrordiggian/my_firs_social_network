{"version":3,"sources":["HOC/WithAuthRedirect.js","assets/images/user.png","components/Profile/Profile.module.css","components/Profile/MyPost/MyPost.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/Post/Post.js","components/Profile/MyPost/Mypost.js","components/Profile/MyPost/MypostContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["withAuthRedirect","Component","connect","state","isAuthData","auth","props","to","module","exports","Post","className","m","post","body","src","profileInfo","photos","small","photoUser","name","fullName","message","icon","faHeart","size","likecounts","maxLength100","maxLengthCreator","Mypost","React","memo","PostsElements","posts","reverse","map","p","key","id","ReduxPostForm","onSubmit","dataForm","addPost","newPost","reduxForm","form","handleSubmit","Field","validate","required","placeholder","cols","rows","component","Textarea","MyPostContainer","ProfilePage","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateProfileStatus","value","onChange","e","currentTarget","ProfileInfo","info","photo","style","background","large","aboutMe","Profile","Preloader","ProfileContainer","this","match","params","userID","getProfile","getProfileStatus","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/4.321480bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const newComponent = (props) => {\r\n        if (!props.isAuthData) return <Redirect to={'/login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {isAuthData: state.auth.isAuthData}\r\n    }\r\n\r\n    return connect(mapStateToProps) (newComponent)\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user.a0b2a4b6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wapper\":\"Profile_wapper__3hLyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wapper\":\"MyPost_wapper__KhOUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1mla9\",\"body\":\"Post_body__3ikh7\",\"name\":\"Post_name__1kx6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__3TQ08\",\"photo\":\"ProfileInfo_photo__vu84q\"};","import React from 'react';\r\nimport m from './Post.module.css'\r\nimport { faHeart} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport photoUser from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className = {m.post}>\r\n        <div className={m.body}>\r\n            <img src={props.profileInfo.photos.small || photoUser}/>\r\n            <div>\r\n                <div className = {m.name}>{props.profileInfo.fullName}</div>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n      <div>\r\n        <span><FontAwesomeIcon  icon={faHeart} size=\"lg\"/> {props.likecounts}</span>\r\n      </div>\r\n    </div>)\r\n    \r\n  \r\n}\r\nexport default Post","import React from 'react';\r\nimport m from './MyPost.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/Validators/Validators\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst Mypost = React.memo((props) => {\r\n    let PostsElements = [...props.state.posts].reverse().map(p =>\r\n        <Post key ={p.id}\r\n              message={p.message}\r\n              likecounts={p.likecounts}\r\n              profileInfo ={props.state.profileInfo}\r\n        />)\r\n    let addPost = (dataForm) => {\r\n        props.addPost(dataForm.newPost)\r\n    }\r\n\r\n    return <div>\r\n        <div>My post</div>\r\n        <ReduxPostForm onSubmit={addPost}/>\r\n        {PostsElements}\r\n\r\n    </div>\r\n})\r\nexport default Mypost\r\n\r\nconst PostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field  name={'newPost'} validate={[required, maxLength100]} placeholder='Enter your message...' cols=\"30\" rows=\"3\" component={Textarea} />\r\n        <div>\r\n            <button>Send message</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({form: 'addNewPost'})(PostForm)","import React from 'react';\r\nimport m from './MyPost.module.css'\r\nimport {addPost} from \"../../../Redux/reducerProfile\";\r\nimport Mypost from \"./Mypost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        state: state.ProfilePage\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, {addPost})(Mypost)\r\n\r\nexport default MyPostContainer","import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    const activateEditMode =() => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode =() => {\r\n        setEditMode(false)\r\n        props.updateProfileStatus(status)\r\n    }\r\n    const changeStatus =(e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    return <div>\r\n        {!editMode &&<div>\r\n            <span  onDoubleClick={activateEditMode}>{props.status || 'Set status'}</span>\r\n        </div>}\r\n        {editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateEditMode} value={status}\r\n                   onChange={changeStatus}/>\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport m from './ProfileInfo.module.css'\r\nimport photoUser from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\n\r\n\r\n\r\nlet ProfileInfo  = (props) => {\r\n    return <div className={m.info}>\r\n            <div className={m.photo} style={{background: `url(${props.state.photos.large || photoUser}) 50% 50% no-repeat /cover`}}/>\r\n            <div>\r\n                <h3>{props.state.fullName}</h3>\r\n                <ProfileStatus status = {props.status} updateProfileStatus ={props.updateProfileStatus} />\r\n                <span>{props.state.aboutMe}</span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n}\r\nexport default ProfileInfo","import React from 'react';\r\nimport m from './Profile.module.css'\r\nimport MyPostContainer from \"./MyPost/MypostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\n\r\n\r\n\r\nlet Profile  = (props) => {\r\n    if(!props.state) return  <Preloader/>\r\n    return <div>\r\n        <ProfileInfo {...props}/>\r\n        <MyPostContainer/>\r\n    </div>\r\n}\r\nexport default Profile","import React from 'react';\r\nimport m from './Profile.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getProfileStatus, updateProfileStatus} from \"../../Redux/reducerProfile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.userID) {\r\n            this.props.getProfile(this.props.match.params.userID)\r\n            this.props.getProfileStatus(this.props.match.params.userID)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.match.params.userID !== this.props.match.params.userID){\r\n            this.props.getProfile(this.props.match.params.userID)\r\n            this.props.getProfileStatus(this.props.match.params.userID)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.ProfilePage.profileInfo,\r\n        id: state.auth.id,\r\n        status: state.ProfilePage.status\r\n    }\r\n}\r\nexport default compose(\r\n\r\n    connect(mapStateToProps, {getProfile, getProfileStatus, updateProfileStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}